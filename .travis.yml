language: minimal
services: docker
branches:
  only:
  - development
  - production
  - master
env:
  matrix:
  - DOCKER_COMPOSE_VERSION=1.25.4
before_install:
- docker -v && docker-compose -v
- sudo rm /usr/local/bin/docker-compose
- curl -L https://github.com/docker/compose/releases/download/${DOCKER_COMPOSE_VERSION}/docker-compose-`uname
  -s`-`uname -m` > docker-compose
- chmod +x docker-compose
- sudo mv docker-compose /usr/local/bin
- curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
- chmod +x ./kubectl
- sudo mv ./kubectl /usr/local/bin/kubectl
- echo "$KUBERNETES_CLUSTER_CERTIFICATE" | base64 --decode > ca.crt
install:
- docker-compose -f udacity-c3-deployment/docker/docker-compose-build.yaml build --parallel
- echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
- docker-compose -f udacity-c3-deployment/docker/docker-compose-build.yaml push

- kubectl --kubeconfig=/dev/null --server=$KUBERNETES_SERVER --certificate-authority=ca.crt --token=$KUBERNETES_TOKEN apply -f udacity-c3-deployment/k8s/backend-feed-deployment.yaml
- kubectl --kubeconfig=/dev/null --server=$KUBERNETES_SERVER --certificate-authority=ca.crt --token=$KUBERNETES_TOKEN set image deployment/backend-feed backend-feed=konopkov/udacity-restapi-feed:$TRAVIS_COMMIT

- kubectl --kubeconfig=/dev/null --server=$KUBERNETES_SERVER --certificate-authority=ca.crt --token=$KUBERNETES_TOKEN apply -f udacity-c3-deployment/k8s/backend-user-deployment.yaml
- kubectl --kubeconfig=/dev/null --server=$KUBERNETES_SERVER --certificate-authority=ca.crt --token=$KUBERNETES_TOKEN set image deployment/backend-user backend-user=konopkov/udacity-restapi-user:$TRAVIS_COMMIT

- kubectl --kubeconfig=/dev/null --server=$KUBERNETES_SERVER --certificate-authority=ca.crt --token=$KUBERNETES_TOKEN apply -f udacity-c3-deployment/k8s/frontend-deployment.yaml
- kubectl --kubeconfig=/dev/null --server=$KUBERNETES_SERVER --certificate-authority=ca.crt --token=$KUBERNETES_TOKEN set image deployment/frontend frontend=konopkov/udacity-frontend:$TRAVIS_COMMIT

- kubectl --kubeconfig=/dev/null --server=$KUBERNETES_SERVER --certificate-authority=ca.crt --token=$KUBERNETES_TOKEN apply -f udacity-c3-deployment/k8s/reverseproxy-deployment.yaml
- kubectl --kubeconfig=/dev/null --server=$KUBERNETES_SERVER --certificate-authority=ca.crt --token=$KUBERNETES_TOKEN set image deployment/reverseproxy reverseproxy=konopkov/reverseproxy:$TRAVIS_COMMIT
